{"version":3,"file":"static/js/33.e08a2f8f.chunk.js","mappings":"yOAAQA,EAAWC,EAAQ,KAAnBD,OAEKE,EAAUF,EAAOG,OAAMC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kTAYvBC,EAAYN,EAAOO,IAAGC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,gHAQtBI,EAAST,EAAOU,GAAEC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,6EAOlBO,EAAUZ,EAAOU,GAAEG,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,qE,6CC8ChC,EApEqB,WAAO,IAADS,EAAAC,EACnBC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAoBC,EAAAA,EAAAA,GAAQC,EAAAA,GAAcJ,GAAnCK,GAA2CC,EAAAA,EAAAA,GAAAJ,EAAA,GAAlC,GACRK,EAAuDF,EAAvDE,YAAaC,EAA0CH,EAA1CG,MAAOC,EAAmCJ,EAAnCI,aAAcC,EAAqBL,EAArBK,SAAUC,EAAWN,EAAXM,OAC9CC,EAAYC,KAAKC,KAAoB,GAAfL,GAC5B,OACEM,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACG,KACDC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAwB,QAAtBxB,EAAgB,QAAhBC,EAAEC,EAASuB,aAAK,IAAAxB,OAAA,EAAdA,EAAgByB,YAAI,IAAA1B,EAAAA,EAAI,IAAIqB,UACpCC,EAAAA,EAAAA,KAAClC,EAAO,CAAAiC,SAAC,eAEXF,EAAAA,EAAAA,MAAC3B,EAAS,CAAA6B,SAAA,EACRC,EAAAA,EAAAA,KAAA,OACEK,IAAKhB,GAAW,mCAAAiB,OAAuCjB,GACvDkB,IAAKjB,EACLkB,MAAM,SAERX,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKT,KACLO,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,eAAaL,EAAU,QAC1BM,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIP,KACJQ,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJF,EAAAA,EAAAA,MAACxB,EAAM,CAAA0B,SAAA,CACJ,IACAN,GACCA,EAAOgB,QACPhB,EAAOiB,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAAI,OAAOb,EAAAA,EAAAA,KAAA,MAAAD,SAAcc,GAALD,EAAe,cAI7Df,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,4BACHF,EAAAA,EAAAA,MAACrB,EAAO,CAAAuB,SAAA,EACNC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAE,WAAAI,OAAaxB,EAAO,SAASqB,OAAKW,EAAAA,EAAAA,GAAA,GAAOlC,EAASuB,OAAQJ,SAAC,YAIrEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CACHC,GAAE,WAAAI,OAAaxB,EAAO,YACtBqB,OAAKW,EAAAA,EAAAA,GAAA,GAAOlC,EAASuB,OAAQJ,SAC9B,qBAMPF,EAAAA,EAAAA,MAACkB,EAAAA,SAAQ,CACPC,UACEhB,EAAAA,EAAAA,KAACiB,EAAAA,GAAa,CACZC,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBZ,MAAM,KACNa,SAAS,IAEZtB,SAAA,CAEA,KACDC,EAAAA,EAAAA,KAACsB,EAAAA,GAAM,SAIf,C","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["const { styled } = require('styled-components');\n\nexport const BackBtn = styled.button`\n  width: 100px;\n  margin-top: 15px;\n  margin-left: 15px;\n  background-color: transparent;\n  border-color: transparent;\n  background-image: url('https://www.svgrepo.com/download/459460/left-arrow.svg');\n  background-size: 22%;\n  background-repeat: no-repeat;\n  background-position: left;\n`;\n\nexport const MovieCard = styled.div`\n  height: 400px;\n  padding: 15px;\n  display: flex;\n  gap: 20px;\n  border-bottom: 1px solid grey;\n`;\n\nexport const Genres = styled.ul`\n  padding: 0;\n  display: flex;\n  gap: 5px;\n  list-style: none;\n`;\n\nexport const Details = styled.ul`\n  padding-bottom: 20px;\n  border-bottom: 1px solid grey;\n`;\n","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { BackBtn, Details, Genres, MovieCard } from './MovieDetails.styled';\nimport { useHttp } from 'hooks/useHttp';\nimport { fetchDetails } from 'services/api';\nimport { Suspense } from 'react';\nimport { RotatingLines } from 'react-loader-spinner';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movieItem] = useHttp(fetchDetails, movieId);\n  const { poster_path, title, vote_average, overview, genres } = movieItem;\n  const userScore = Math.ceil(vote_average * 10);\n  return (\n    <>\n      {' '}\n      <Link to={location.state?.from ?? '/'}>\n        <BackBtn>Go back</BackBtn>\n      </Link>\n      <MovieCard>\n        <img\n          src={poster_path && `https://image.tmdb.org/t/p/w300/${poster_path}`}\n          alt={title}\n          width=\"300\"\n        />\n        <div>\n          <h2>{title}</h2>\n          <p>User score: {userScore}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <Genres>\n            {' '}\n            {genres &&\n              genres.length &&\n              genres.map(({ id, name }) => <li key={id}>{name}</li>)}\n          </Genres>\n        </div>\n      </MovieCard>\n      <div>\n        <p>Additional information</p>\n        <Details>\n          <li>\n            <Link to={`/movies/${movieId}/cast`} state={{ ...location.state }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link\n              to={`/movies/${movieId}/reviews`}\n              state={{ ...location.state }}\n            >\n              Reviews\n            </Link>\n          </li>\n        </Details>\n      </div>\n      <Suspense\n        fallback={\n          <RotatingLines\n            strokeColor=\"grey\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            width=\"96\"\n            visible={true}\n          />\n        }\n      >\n        {' '}\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["styled","require","BackBtn","button","_templateObject","_taggedTemplateLiteral","MovieCard","div","_templateObject2","Genres","ul","_templateObject3","Details","_templateObject4","_location$state$from","_location$state","location","useLocation","movieId","useParams","_useHttp","useHttp","fetchDetails","movieItem","_slicedToArray","poster_path","title","vote_average","overview","genres","userScore","Math","ceil","_jsxs","_Fragment","children","_jsx","Link","to","state","from","src","concat","alt","width","length","map","_ref","id","name","_objectSpread","Suspense","fallback","RotatingLines","strokeColor","strokeWidth","animationDuration","visible","Outlet"],"sourceRoot":""}