{"version":3,"file":"static/js/186.5b787a59.chunk.js","mappings":"8LA0BA,UAtBgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAkBC,EAAAA,EAAAA,GAAQC,EAAAA,GAAcJ,GAClCK,GAD0CC,EAAAA,EAAAA,GAAAJ,EAAA,GAAlC,GACUK,QAExB,OAAKF,GAA8B,IAAnBA,EAAQG,QAKtBC,EAAAA,EAAAA,KAAA,MAAAC,SACU,OAAPL,QAAO,IAAPA,OAAO,EAAPA,EAASM,KAAI,SAAAC,GAAG,OACfC,EAAAA,EAAAA,MAAA,MAAAH,SAAA,CACG,KACDG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,CAAI,WAASE,EAAIE,WACjBL,EAAAA,EAAAA,KAAA,KAAAC,SAAIE,EAAIG,YAHDH,EAAII,GAIR,OAVFP,EAAAA,EAAAA,KAAA,KAAAC,SAAG,6CAcd,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useHttp } from 'hooks/useHttp';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [authors] = useHttp(fetchReviews, movieId);\n  const reviews = authors.results;\n\n  if (!reviews || reviews.length === 0) {\n    return <p>We don't have any reviews for this movie.</p>;\n  }\n\n  return (\n    <ul>\n      {reviews?.map(rev => (\n        <li key={rev.id}>\n          {' '}\n          <h3>Author: {rev.author}</h3>\n          <p>{rev.content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","_useHttp","useHttp","fetchReviews","reviews","_slicedToArray","results","length","_jsx","children","map","rev","_jsxs","author","content","id"],"sourceRoot":""}